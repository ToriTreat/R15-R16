--[[
Made by rouxhaver

Required Hats:
https://www.roblox.com/catalog/2956239660/Belle-Of-Belfast-Long-Red-Hair
https://www.roblox.com/catalog/301818806/Serenas-Hair
https://www.roblox.com/catalog/62724852/Chestnut-Bun
https://www.roblox.com/catalog/617605556/Medieval-Hood-of-Mystery

paid version coming soon owo
]]
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local lp = Players.LocalPlayer
local char = lp.Character

lp.Character = nil
lp.Character = char

wait(Players.RespawnTime + .3)

char.Humanoid.Health = 0

local camera = workspace.CurrentCamera

local Center = Instance.new("Part", workspace)
Center.Anchored = true
Center.Transparency = 1

local current_position = lp.Character:WaitForChild("Head").Position

camera.CameraSubject = Center

local speed = 0

local function updatePosition()
    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
        current_position += camera.CFrame.RightVector * speed
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
        current_position += camera.CFrame.RightVector * -speed
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
        current_position += camera.CFrame.LookVector * speed
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
        current_position += camera.CFrame.LookVector * -speed
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.E) then
        current_position += camera.CFrame.UpVector * speed
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.Q) then
        current_position += camera.CFrame.UpVector * -speed
    end
    if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
        speed = 1.5
    else
        speed = 0.75
    end
    Center.Position = current_position
end

local function createMobileGui()
    local screenGui = Instance.new("ScreenGui", lp.PlayerGui)
    screenGui.Name = "MobileGui"

    local title = Instance.new("TextLabel", screenGui)
    title.Name = "Title"
    title.Text = "GUI Credit X/Script by Rouxhaver"
    title.Size = UDim2.new(0, 200, 0, 50)
    title.Position = UDim2.new(0.5, -100, 0, 10)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.SourceSans
    title.TextSize = 20
    title.TextColor3 = Color3.new(1, 1, 1)

    local frame = Instance.new("Frame", screenGui)
    frame.Name = "ArrowFrame"
    frame.Size = UDim2.new(0, 150, 0, 150)
    frame.Position = UDim2.new(0.5, -75, 0.5, -75)
    frame.BackgroundTransparency = 1
    frame.Active = true
    frame.Draggable = true

    local function createButton(name, text, position)
        local button = Instance.new("TextButton", frame)
        button.Name = name
        button.Text = text
        button.Size = UDim2.new(0, 50, 0, 50)
        button.Position = position
        button.BackgroundTransparency = 0.5
        button.BackgroundColor3 = Color3.new(0, 0, 0)
        button.Font = Enum.Font.SourceSans
        button.TextSize = 24
        button.TextColor3 = Color3.new(1, 1, 1)
        return button
    end

    local upButton = createButton("UpButton", "↑", UDim2.new(0.5, -25, 0, 0))
    local downButton = createButton("DownButton", "↓", UDim2.new(0.5, -25, 1, -50))
    local leftButton = createButton("LeftButton", "←", UDim2.new(0, 0, 0.5, -25))
    local rightButton = createButton("RightButton", "→", UDim2.new(1, -50, 0.5, -25))


    local function onButtonHold(button, getDirection)
    local isPressed = false
    button.MouseButton1Down:Connect(function()
        isPressed = true
        while isPressed do
            local direction = getDirection()
            current_position += direction
            Center.Position = current_position
            task.wait()
        end
    end)
    button.MouseButton1Up:Connect(function()
        isPressed = false
    end)
end

    onButtonHold(upButton, function() return camera.CFrame.LookVector * speed end)
onButtonHold(downButton, function() return camera.CFrame.LookVector * -speed end)
onButtonHold(leftButton, function() return camera.CFrame.RightVector * -speed end)
onButtonHold(rightButton, function() return camera.CFrame.RightVector * speed end)
end

if UserInputService.TouchEnabled then
    createMobileGui()
end

coroutine.wrap(function()
    while wait() do
        updatePosition()
    end
end)()

local bob_offset = 0
local bob_change = 0.02

local wing_angle = 0
local wa_change = 3

local body = Instance.new("Part", workspace)
body.Size = Vector3.new(1, 1, 1)
body.Anchored = true
body.Transparency = 1

local head = Instance.new("Part", workspace)
head.Size = Vector3.new(1, 1, 1)
head.Anchored = true
head.Transparency = 1

local lwing = Instance.new("Part", workspace)
lwing.Size = Vector3.new(1, 1, 1)
lwing.PivotOffset = CFrame.new(2, 0, 0)
lwing.Anchored = true
lwing.Transparency = 1

local rwing = Instance.new("Part", workspace)
rwing.Size = Vector3.new(1, 1, 1)
rwing.PivotOffset = CFrame.new(-2, 0, 0)
rwing.Anchored = true
rwing.Transparency = 1

coroutine.wrap(function()
    while task.wait() do
        if bob_offset > 0 then
            bob_change = -bob_change
        end
        if bob_offset < -1.5 then
            bob_change = -bob_change
        end
        bob_offset += bob_change

        if wing_angle > 24 then
            wa_change = -wa_change
        end
        if wing_angle < -24 then
            wa_change = -wa_change
        end
        wing_angle += wa_change

        body.CFrame = (Center.CFrame + Vector3.new(0, bob_offset, 0)) * camera.CFrame.Rotation
        head.CFrame = body.CFrame + body.CFrame.LookVector
        lwing:PivotTo(body.CFrame * CFrame.Angles(0, 0, math.rad(wing_angle)))
        rwing:PivotTo(body.CFrame * CFrame.Angles(0, 0, math.rad(-wing_angle)))
    end
end)()

function Move(part, cframe)
    part.Velocity = Vector3.new(0, 30, 0)
    local tween = TweenService:Create(part, TweenInfo.new(0), {CFrame = cframe})
    tween:Play()
end

local vbody = char["Kate Hair"].Handle
local vhead = char["MediHood"].Handle
local vlwing = char["LongRedHair"].Handle
local vrwing = char["LongHairBeanie"].Handle

while task.wait() do
    Move(vbody, body.CFrame)
    Move(vhead, head.CFrame)
    Move(vrwing, (rwing.CFrame - rwing.CFrame.RightVector * .3) * CFrame.Angles(math.rad(90), 0, math.rad(90)))
    Move(vlwing, (lwing.CFrame - lwing.CFrame.RightVector * -.3) * CFrame.Angles(math.rad(-90), 0, math.rad(-90)))
end
